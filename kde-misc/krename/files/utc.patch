diff --git a/src/systemplugin.cpp b/src/systemplugin.cpp
index f01d75e..4d60c51 100644
--- a/src/systemplugin.cpp
+++ b/src/systemplugin.cpp
@@ -46,11 +46,17 @@ SystemPlugin::SystemPlugin(PluginLoader *loader)
     this->addSupportedToken("user");
     this->addSupportedToken("group");
     this->addSupportedToken("creationdate");
+    this->addSupportedToken("creationdateutc");
     this->addSupportedToken("creationdate;.*");
+    this->addSupportedToken("creationdateutc;.*");
     this->addSupportedToken("modificationdate");
+    this->addSupportedToken("modificationdateutc");
     this->addSupportedToken("modificationdate;.*");
+    this->addSupportedToken("modificationdateutc;.*");
     this->addSupportedToken("accessdate");
+    this->addSupportedToken("accessdateutc");
     this->addSupportedToken("accessdate;.*");
+    this->addSupportedToken("accessdateutc;.*");
     this->addSupportedToken("filesize");
 
     m_help.append(Plugin::createHelpEntry("date", i18n("Insert the current date")));
@@ -66,11 +72,17 @@ SystemPlugin::SystemPlugin(PluginLoader *loader)
     m_help.append(Plugin::createHelpEntry("user", i18n("Owner of the file")));
     m_help.append(Plugin::createHelpEntry("group", i18n("Owning group of the file")));
     m_help.append(Plugin::createHelpEntry("creationdate", i18n("Insert the files creation date")));
+    m_help.append(Plugin::createHelpEntry("creationdateutc", i18n("Insert the files creation date (UTC)")));
     m_help.append(Plugin::createHelpEntry("creationdate;yyyy-MM-dd", i18n("Insert the formatted file creation date")));
+    m_help.append(Plugin::createHelpEntry("creationdateutc;yyyy-MM-dd", i18n("Insert the formatted file creation date (UTC)")));
     m_help.append(Plugin::createHelpEntry("modificationdate", i18n("Insert the files modification date")));
+    m_help.append(Plugin::createHelpEntry("modificationdateutc", i18n("Insert the files modification date (UTC)")));
     m_help.append(Plugin::createHelpEntry("modificationdate;yyyy-MM-dd", i18n("Insert the formatted modification date")));
+    m_help.append(Plugin::createHelpEntry("modificationdateutc;yyyy-MM-dd", i18n("Insert the formatted modification date (UTC)")));
     m_help.append(Plugin::createHelpEntry("accessdate", i18n("Insert the date of the last file access")));
+    m_help.append(Plugin::createHelpEntry("accessdateutc", i18n("Insert the date of the last file access (UTC)")));
     m_help.append(Plugin::createHelpEntry("accessdate;yyyy-MM-dd", i18n("Insert the formatted date of the last file access")));
+    m_help.append(Plugin::createHelpEntry("accessdateutc;yyyy-MM-dd", i18n("Insert the formatted date of the last file access (UTC)")));
     m_help.append(Plugin::createHelpEntry("filesize", i18n("Insert the file size in bytes")));
 
     m_name = i18n("Date and system functions");
@@ -131,7 +143,7 @@ QString SystemPlugin::processFile(BatchRenamer *b, int index, const QString &fil
 	struct stat info;
 	stat(file_name.toLatin1().data(), &info);
 	uint64_t access_ms       = info.st_atime * 1000 + info.st_atim.tv_nsec / 1000000;
-	uint64_t status_ms       = info.st_ctime * 1000 + info.st_ctim.tv_nsec / 1000000;
+	// uint64_t status_ms       = info.st_ctime * 1000 + info.st_ctim.tv_nsec / 1000000;
 	uint64_t modification_ms = info.st_mtime * 1000 + info.st_mtim.tv_nsec / 1000000;
         
 	KIO::StatJob *statJob = KIO::stat(url, KIO::StatJob::SourceSide, 2);
@@ -151,6 +163,12 @@ QString SystemPlugin::processFile(BatchRenamer *b, int index, const QString &fil
             return time(QDateTime::fromMSecsSinceEpoch(modification_ms), format);
         } else if (token == "accessdate") {
             return time(QDateTime::fromMSecsSinceEpoch(access_ms), format);
+        } else if (token == "creationdateutc") {
+            return time(QDateTime::fromMSecsSinceEpoch(modification_ms).toUTC(), format);
+        } else if (token == "modificationdateutc") {
+            return time(QDateTime::fromMSecsSinceEpoch(modification_ms).toUTC(), format);
+        } else if (token == "accessdateutc") {
+            return time(QDateTime::fromMSecsSinceEpoch(access_ms).toUTC(), format);
         } else if (token == "filesize") {
             return QString::number(item.size());
         }
